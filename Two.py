'''
Each new term in the Fibonacci sequence is generated by adding
the previous two terms. By starting with 1 and 2, the first 10
terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values
do not exceed four million, find the sum of the even-valued terms.
'''
def find_sum(n):
    fib = [1, 2, 0]  # Only ever need to store 3 Fibonacci numbers
    sigma = 0
    index = 1
    while fib[index] < n:
        if index == 1:  # Even number at this index every time
            sigma += fib[index]
        index = (index + 1) % 3  # Stop recalculation
        fib[index] = fib[(index - 1) % 3] + fib[(index - 2) % 3]
    return sigma


if __name__ == "__main__":
    LIMIT = 4_000_000
    print(f"The sum of the Fibonacci numbers up not exceeding {LIMIT} is " +
          f"{find_sum(LIMIT)}")

